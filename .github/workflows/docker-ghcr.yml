name: Publish to GHCR

on:
  workflow_call:
    inputs:
      Dockerfile:
        type: string
        description: "Path to the Dockerfile"
        required: false
        default: "."
      version:
        type: string
        description: "Version for the Docker image"
        required: false
        default: ""
      target:
        type: string
        description: "Target for the Dockerfile"
        required: false
        default: ""

    secrets:
      PAT:
        description: "Personal Access Token"
        required: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  publish:
    runs-on: sonu-github-arc

    permissions:
      contents: read
      packages: write

    steps:
      - name: update git
        run: sudo apt-get update && sudo apt-get install git -y

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.PAT }}

      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: If version is set, set the tag
        id: tag
        run: |
          if [[ "${{ inputs.version }}" != '' ]]; then
            echo "::set-output name=tags::${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.version }}"
          else
            echo "::set-output name=tags::${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.DOCKER_METADATA_OUTPUT_VERSION }}"
          fi

      - name: If target is set, set the tag
        id: target
        run: |
          if [[ "${{ inputs.target }}" != '' ]]; then
            echo "::set-output name=tags::${{ steps.tag.outputs.tags }}-${{ inputs.target }}"
          else
            echo "::set-output name=tags::${{ steps.tag.outputs.tags }}"
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ${{ inputs.Dockerfile}}
          push: true
          tags: ${{ steps.target.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          target: ${{ inputs.target }}
