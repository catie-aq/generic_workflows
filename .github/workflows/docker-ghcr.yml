name: Publish to GHCR

on:
  workflow_call:
    inputs:
      Dockerfile:
        type: string
        description: "Path to the Repository"
        required: false
        default: "."
      file:
        type: string
        description: "Path to the Dockerfile if not in root"
        required: false
        default: ""
      target:
        type: string
        description: "Target for the Dockerfile"
        required: false

    secrets:
      build_args:
        description: "Build Args for Dockerfile"
        required: false
      PAT:
        description: "Personal Access Token for private submodules or private images"
        required: false

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  PAT: ${{ secrets.PAT }}

jobs:
  publish:
    runs-on: sonu-github-arc

    permissions:
      contents: read
      packages: write

    steps:
      - name: update git
        run: sudo apt-get update && sudo apt-get install git -y

      - name: Checkout repository
        if: ${{ env.PAT != '' }}
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.PAT }}

      - name: Checkout repository
        if: ${{ env.PAT == '' }}
        uses: actions/checkout@v4

      - name: Login to GHCR with GitHub Token
        if: ${{ env.PAT == '' }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to GHCR with Personal Access Token
        if: ${{ env.PAT != '' }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }}

      - name: Set formatted suffix
        id: suffix
        run: |
          if [ ${{ inputs.target }} != "" ]; then
            echo "::set-output name=target::-${{ inputs.target }}"
          else
            echo "::set-output name=target::${{ inputs.target }}"
          fi

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            suffix=${{ steps.suffix.outputs.target }}

      - name: Set file location
        id: file
        run: |
          if [ ${{ inputs.file }} == "" ]; then
            echo "::set-output name=file::${{ inputs.Dockerfile }}/Dockerfile"
          else
            echo "::set-output name=file::${{ inputs.file }}"
          fi

      - name: Clear Docker Buildx cache
        run: docker builder prune -af

      - name: Build and push Docker image (version, target)
        uses: docker/build-push-action@v2
        with:
          context: ${{ inputs.Dockerfile}}
          file: ${{ steps.file.outputs.file }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          target: ${{ inputs.target }}
          build-args: ${{ secrets.build_args }}
